name: Build & Release (mac + linux)

on:
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  mac:
    runs-on: macos-13
    strategy:
      matrix: { arch: [x64, arm64] }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - run: npm run inject-alert
      - run: npx electron-builder --mac --${{ matrix.arch }} --publish never
      - uses: actions/upload-artifact@v4
        with:
          name: mac-${{ matrix.arch }}
          path: |
            release/*.dmg
            release/*.zip
            release/*.blockmap
            release/latest-mac.yml
          if-no-files-found: ignore

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - run: npm run inject-alert
      - run: npx electron-builder --linux --publish never
      - uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            release/*.AppImage
            release/*.deb
          if-no-files-found: ignore

  release:
    runs-on: ubuntu-latest
    needs: [mac, linux]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      # Pull all artifacts and flatten them into ./collected
      - uses: actions/download-artifact@v4
        with:
          path: collected
          merge-multiple: true

      - name: Show collected files (debug)
        run: |
          echo "Collected files:"
          ls -lah collected || true

      - id: read_version
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version)")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Will create draft release for v$VERSION"

      # Create/Update a DRAFT release and upload all artifacts
      - name: Create or update draft release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          prerelease: true
          tag: v${{ steps.read_version.outputs.version }}
          name: Summoner Desktop v${{ steps.read_version.outputs.version }}
          artifacts: "collected/*"
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
